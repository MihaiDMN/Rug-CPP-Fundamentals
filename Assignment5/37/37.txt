This exercise asks us to convert verbal variable and function desriptions to declarations.
1. Declare a variable ptr pointing to rows of 8 doubles
double (*ptr)[8];

2. Declare a variable ptr pointing to an array holding the addresses of series of doubles.
double *ptr[];

3. Declare a pointer ptr that may point to arrays of immutable pointers to arrays of mutable pointers to immutable std::string objects.
std::string const * *const *ptr;

4. Declare a function fun expecting no parameters, returning a matrix of 6 x 6 std::string objects
std::string (*fun())[6][6];

5. Assume that the following typedef has been defined: using StringMat = std::string (*)[6]; Declare a function fun as in the previous item, now using StringMat;
StringMat = fun();

6. Complete the following function by providing the initialization section of its for-statement (submit the completed function):
    void process(unsigned begin, unsigned end, char const *const *args)
    {
        for 
        (
            char const *const *argsBegin = args + begin,
                       *const *argsEnd = args + end;
                argsBegin != argsEnd;
                    ++argsBegin
        )
            process(*argsBegin);
    }

7. Declare a function fun defining a parameter ptr which is an immutable pointer to NTBSs, returning one of these pointers as an immutable NTBS.
char const *fun(char const *const *ptr);  
